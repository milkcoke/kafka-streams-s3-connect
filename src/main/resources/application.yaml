server:
  port: 8080

app:
  topic:
    source-topic: retry
    sink-topic: sink-topic

spring:
  kafka:
    properties:
      security.protocol: PLAINTEXT
      sasl:
         mechanism: PLAIN
#        mechanism: SCRAM-SHA-512
#        jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username='m_falcon' password='m_falcon';
#              jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
      auto.create.topics.enable: true
    bootstrap-servers:
      - localhost:9092
      - localhost:9093
      - localhost:9094
    streams:
      application-id: bypass-streams
      properties:
        commit.interval.ms: 100 # default: 100 when exactly_once
        processing.guarantee: exactly_once_v2
        default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndFailExceptionHandler

    producer:
      acks: -1
      retries: 5
      properties:
        enable.idempotence: true
        partitioner.ignore.keys: false # This is equal to the UniformStickyPartitioner when this is true
        key.serializer: org.apache.kafka.common.serialization.IntSerializer
        value.serializer: org.apache.kafka.common.serialization.LongSerializer

    consumer:
      max-poll-records: 1_000 # default: 1000
      auto-offset-reset: earliest # default: earliest
      properties:
        poll.ms: 100 # default: 100
        fetch.max.bytes: 52428800  # default: 52428800 (5MB)
        key.deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
        value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
